/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Database;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.ResultSetMetaData;
import javax.swing.JOptionPane;
import model.*;
/**
 *
 * @author nunya
 */
public class MainMenu extends javax.swing.JFrame {
    Connection objDBConnection = null;
    MySQLConnectExample objMySQLDBConnect = null;
    UpdateData objUpdateData = new UpdateData();
    //ErrorPopUp objError = null;
    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
        objMySQLDBConnect = new MySQLConnectExample();  
        objDBConnection = objMySQLDBConnect.getDBConnection();
        //objError = new ErrorPopUp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DisplayDialog = new javax.swing.JDialog();
        lblSelectDisplayTable = new javax.swing.JLabel();
        DisplayTblSelectionMenu = new javax.swing.JComboBox<>();
        MainMenuTab = new javax.swing.JTabbedPane();
        MMOuterContainer = new javax.swing.JPanel();
        MMWelcome = new javax.swing.JLabel();
        MMinnerContainer = new javax.swing.JPanel();
        MMintroText = new javax.swing.JLabel();
        ModifyTabDescription = new javax.swing.JLabel();
        InsertTabDescription = new javax.swing.JLabel();
        QueryTabDescription = new javax.swing.JLabel();
        ModifyTabContainer = new javax.swing.JPanel();
        ModSidePanel = new javax.swing.JPanel();
        lblModifyTableList = new javax.swing.JLabel();
        ModifyTableList = new javax.swing.JComboBox<>();
        deleteTblData = new javax.swing.JButton();
        updateTblData = new javax.swing.JButton();
        lblModifyWarning = new javax.swing.JLabel();
        ModifyMHBELogo = new javax.swing.JLabel();
        ModOuterTblContainer = new javax.swing.JPanel();
        ModTblScrollPane = new javax.swing.JScrollPane();
        ModifyResultTable = new javax.swing.JTable();
        InsertTabContainer = new javax.swing.JPanel();
        InsertInstructions = new javax.swing.JLabel();
        buttonProviderTbl = new javax.swing.JButton();
        buttonPlanTbl = new javax.swing.JButton();
        buttonBenefitsTbl = new javax.swing.JButton();
        buttonPlanlvlProgramsTbl = new javax.swing.JButton();
        buttonCostShareTbl = new javax.swing.JButton();
        buttonPremiumTbl = new javax.swing.JButton();
        buttonGeoCovTbl = new javax.swing.JButton();
        buttonMOOPTbl = new javax.swing.JButton();
        buttonRefReqTbl = new javax.swing.JButton();
        buttonInNetDeductTbl = new javax.swing.JButton();
        buttonOutNetDeductTbl = new javax.swing.JButton();
        buttonBenefitCostTbl = new javax.swing.JButton();
        lvlStep1 = new javax.swing.JLabel();
        lblStep2 = new javax.swing.JLabel();
        lblStep3 = new javax.swing.JLabel();
        lblStep4 = new javax.swing.JLabel();
        lblStep5 = new javax.swing.JLabel();
        buttonOutPocketCostsTbl = new javax.swing.JButton();
        lblStep6 = new javax.swing.JLabel();
        QueryTabContainer = new javax.swing.JPanel();
        QueryTableContainer = new javax.swing.JScrollPane();
        QueryResultTable = new javax.swing.JTable();
        lblCustomSQLQueryBtn = new javax.swing.JLabel();
        lblQueryTabIntro = new javax.swing.JLabel();
        QueryDropdownList = new javax.swing.JComboBox<>();
        lblQueryDropdown = new javax.swing.JLabel();
        FileMenu = new javax.swing.JMenuBar();
        FileDropdown = new javax.swing.JMenu();
        Exit = new javax.swing.JMenuItem();
        HelpDropdown = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        DisplayDialog.setBackground(new java.awt.Color(51, 153, 255));

        lblSelectDisplayTable.setText("Please select the table(s) you wish to display:");

        DisplayTblSelectionMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Benefits", "Cost Sharing", "Dates", "Exclusions", "Geographic Coverage", "In-Network Deductible", "Maximum Out-of-Pocket", "Out-of-Network Deductible", "Out-of-Pocket Costs", "Plan", "Plan-Level Programs", "Premium", "Provider", "Referral Required", "Service Cost" }));
        DisplayTblSelectionMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayTblSelectionMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DisplayDialogLayout = new javax.swing.GroupLayout(DisplayDialog.getContentPane());
        DisplayDialog.getContentPane().setLayout(DisplayDialogLayout);
        DisplayDialogLayout.setHorizontalGroup(
            DisplayDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DisplayDialogLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(DisplayDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblSelectDisplayTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DisplayTblSelectionMenu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        DisplayDialogLayout.setVerticalGroup(
            DisplayDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DisplayDialogLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblSelectDisplayTable, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DisplayTblSelectionMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        setForeground(java.awt.Color.cyan);

        MainMenuTab.setBackground(new java.awt.Color(255, 255, 255));
        MainMenuTab.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        MMOuterContainer.setBackground(new java.awt.Color(255, 255, 255));

        MMWelcome.setBackground(new java.awt.Color(255, 255, 255));
        MMWelcome.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        MMWelcome.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MMWelcome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Database/MHBElogo.jpg"))); // NOI18N
        MMWelcome.setText("<html><BLOCKQUOTE>Welcome to the Rate and Plan Template Database </br>for the Maryland Health Benefit Exchange</BLOCKQUOTE></html>");

        MMinnerContainer.setBackground(new java.awt.Color(255, 255, 255));

        MMintroText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        MMintroText.setText("<html>This application allows the user to send queries to the Rate and Plan Database to retrieve information </br> about the Insurance Plans offered by Issuers participating in the Maryland HBX. Please select and option below to continue.</html>");

        ModifyTabDescription.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ModifyTabDescription.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Database/mhbelogo_thumb.png"))); // NOI18N
        ModifyTabDescription.setText("<html><b>Modify Templates:</b></br> </br> This tab will allow users to modify any existing tables within the template database. Navigate to this tab if you need to update specific template information OR if you need to delete any template information from the database.</br> </br></html>");

        InsertTabDescription.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        InsertTabDescription.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Database/mhbelogo_thumb.png"))); // NOI18N
        InsertTabDescription.setText("<html><b>Insert Template:</b></br> </br> This tab allows users to insert a new template into the database, table by table.</br> </html>");

        QueryTabDescription.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        QueryTabDescription.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Database/mhbelogo_thumb.png"))); // NOI18N
        QueryTabDescription.setText("<html><b>Query Database:</b></br> </br> This tab allows users to ask specific questions of the database. Some common pre-generated queries are available and there is an option for advanced users to supply a SQL query to the database to answer more complex questions.</br> </html>");

        javax.swing.GroupLayout MMinnerContainerLayout = new javax.swing.GroupLayout(MMinnerContainer);
        MMinnerContainer.setLayout(MMinnerContainerLayout);
        MMinnerContainerLayout.setHorizontalGroup(
            MMinnerContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MMinnerContainerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MMinnerContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ModifyTabDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InsertTabDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QueryTabDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MMintroText, javax.swing.GroupLayout.PREFERRED_SIZE, 871, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        MMinnerContainerLayout.setVerticalGroup(
            MMinnerContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MMinnerContainerLayout.createSequentialGroup()
                .addComponent(MMintroText, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(ModifyTabDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(InsertTabDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(QueryTabDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 115, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MMOuterContainerLayout = new javax.swing.GroupLayout(MMOuterContainer);
        MMOuterContainer.setLayout(MMOuterContainerLayout);
        MMOuterContainerLayout.setHorizontalGroup(
            MMOuterContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MMinnerContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MMOuterContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MMWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MMOuterContainerLayout.setVerticalGroup(
            MMOuterContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MMOuterContainerLayout.createSequentialGroup()
                .addComponent(MMWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MMinnerContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MainMenuTab.addTab("Main Menu", MMOuterContainer);

        ModifyTabContainer.setBackground(new java.awt.Color(255, 255, 255));

        ModSidePanel.setBackground(new java.awt.Color(255, 255, 255));

        lblModifyTableList.setLabelFor(ModifyTabContainer);
        lblModifyTableList.setText("Which table would you like to modify?");

        ModifyTableList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Provider Table", "Plan Table", "Plan Level Programs Table", "Benefit Table", "Cost Sharing Table", "Service Cost Table", "Dates Table", "Exclusions Table", "Geographic Coverage Table", "In Network Deductible Table", "Out-of-Network Deductible Table", "Out-of-pocket Table", "Referral Required Table", "Maximum Out-of-pocket Table" }));
        ModifyTableList.setSelectedItem(null);
        ModifyTableList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyTableListActionPerformed(evt);
            }
        });

        deleteTblData.setText("Delete");
        deleteTblData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTblDataActionPerformed(evt);
            }
        });

        updateTblData.setText("Update");
        updateTblData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTblDataActionPerformed(evt);
            }
        });

        lblModifyWarning.setForeground(new java.awt.Color(255, 0, 0));
        lblModifyWarning.setText("<html><b>WARNING:</b> The information housed in this database comes directly from the Issuer Templates uploaded to SERFF. </br>The only reason a user should modify a template is to correct information that was incorrectly added to the database via either an automated process or manual data entry. </br>This database is meant to be a source of truth for MHBE and should only ever contain information pulled directly from the templates on SERFF. Thank you.</html>");

        ModifyMHBELogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Database/MHBElogo.jpg"))); // NOI18N

        javax.swing.GroupLayout ModSidePanelLayout = new javax.swing.GroupLayout(ModSidePanel);
        ModSidePanel.setLayout(ModSidePanelLayout);
        ModSidePanelLayout.setHorizontalGroup(
            ModSidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModSidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ModifyMHBELogo)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(ModSidePanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(ModSidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ModifyTableList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblModifyTableList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ModSidePanelLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(ModSidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblModifyWarning, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ModSidePanelLayout.createSequentialGroup()
                        .addGroup(ModSidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteTblData, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateTblData, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))))
        );
        ModSidePanelLayout.setVerticalGroup(
            ModSidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModSidePanelLayout.createSequentialGroup()
                .addComponent(ModifyMHBELogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblModifyTableList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ModifyTableList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateTblData, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteTblData, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblModifyWarning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        ModTblScrollPane.setBackground(new java.awt.Color(255, 255, 255));

        ModifyResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ModTblScrollPane.setViewportView(ModifyResultTable);

        javax.swing.GroupLayout ModOuterTblContainerLayout = new javax.swing.GroupLayout(ModOuterTblContainer);
        ModOuterTblContainer.setLayout(ModOuterTblContainerLayout);
        ModOuterTblContainerLayout.setHorizontalGroup(
            ModOuterTblContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ModOuterTblContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ModTblScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE))
        );
        ModOuterTblContainerLayout.setVerticalGroup(
            ModOuterTblContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModOuterTblContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ModTblScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout ModifyTabContainerLayout = new javax.swing.GroupLayout(ModifyTabContainer);
        ModifyTabContainer.setLayout(ModifyTabContainerLayout);
        ModifyTabContainerLayout.setHorizontalGroup(
            ModifyTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModifyTabContainerLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(ModSidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(ModOuterTblContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ModifyTabContainerLayout.setVerticalGroup(
            ModifyTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ModifyTabContainerLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(ModifyTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ModOuterTblContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ModSidePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        MainMenuTab.addTab("Modify Templates", ModifyTabContainer);

        InsertInstructions.setText("<html>Template data must be entered in a specific order to maintain database integrity.</br> \nPlease add data to the tables in the order provided below.</html>");

        buttonProviderTbl.setText("Provider Table");
        buttonProviderTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonProviderTblActionPerformed(evt);
            }
        });

        buttonPlanTbl.setText("Plan Table");
        buttonPlanTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPlanTblActionPerformed(evt);
            }
        });

        buttonBenefitsTbl.setText("Benefits Table");
        buttonBenefitsTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBenefitsTblActionPerformed(evt);
            }
        });

        buttonPlanlvlProgramsTbl.setText("Plan Level Programs Table");
        buttonPlanlvlProgramsTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPlanlvlProgramsTblActionPerformed(evt);
            }
        });

        buttonCostShareTbl.setText("Cost Sharing Table");
        buttonCostShareTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCostShareTblActionPerformed(evt);
            }
        });

        buttonPremiumTbl.setText("Premium Table");
        buttonPremiumTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPremiumTblActionPerformed(evt);
            }
        });

        buttonGeoCovTbl.setText("Geographic Coverage Table");
        buttonGeoCovTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGeoCovTblActionPerformed(evt);
            }
        });

        buttonMOOPTbl.setText("Max Out of Pocket Table");
        buttonMOOPTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMOOPTblActionPerformed(evt);
            }
        });

        buttonRefReqTbl.setText("Referral Required Table");
        buttonRefReqTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRefReqTblActionPerformed(evt);
            }
        });

        buttonInNetDeductTbl.setText("In Network Deductible Table");
        buttonInNetDeductTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonInNetDeductTblActionPerformed(evt);
            }
        });

        buttonOutNetDeductTbl.setText("Out-of-Network Deductible Table");
        buttonOutNetDeductTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOutNetDeductTblActionPerformed(evt);
            }
        });

        buttonBenefitCostTbl.setText("Benefit Service Cost Table");
        buttonBenefitCostTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBenefitCostTblActionPerformed(evt);
            }
        });

        lvlStep1.setText("Step 1:");

        lblStep2.setText("Step 2:");

        lblStep3.setText("Step 3:");

        lblStep4.setText("Step 4:");

        lblStep5.setText("Step 5:");

        buttonOutPocketCostsTbl.setText("Out of Pocket Table");
        buttonOutPocketCostsTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOutPocketCostsTblActionPerformed(evt);
            }
        });

        lblStep6.setText("Step 6:");

        javax.swing.GroupLayout InsertTabContainerLayout = new javax.swing.GroupLayout(InsertTabContainer);
        InsertTabContainer.setLayout(InsertTabContainerLayout);
        InsertTabContainerLayout.setHorizontalGroup(
            InsertTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InsertTabContainerLayout.createSequentialGroup()
                .addGap(290, 290, 290)
                .addGroup(InsertTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(InsertTabContainerLayout.createSequentialGroup()
                        .addComponent(lblStep2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonPlanTbl, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(InsertTabContainerLayout.createSequentialGroup()
                        .addComponent(lvlStep1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonProviderTbl, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InsertTabContainerLayout.createSequentialGroup()
                .addContainerGap(311, Short.MAX_VALUE)
                .addGroup(InsertTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InsertTabContainerLayout.createSequentialGroup()
                        .addComponent(InsertInstructions, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InsertTabContainerLayout.createSequentialGroup()
                        .addGroup(InsertTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblStep3)
                            .addComponent(lblStep4)
                            .addComponent(lblStep5)
                            .addComponent(lblStep6))
                        .addGap(5, 5, 5)
                        .addGroup(InsertTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonMOOPTbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonRefReqTbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonPremiumTbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonOutPocketCostsTbl, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                        .addGap(55, 55, 55)
                        .addGroup(InsertTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonBenefitCostTbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonOutNetDeductTbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonInNetDeductTbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonBenefitsTbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(60, 60, 60)
                        .addGroup(InsertTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonPlanlvlProgramsTbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonGeoCovTbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonCostShareTbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(81, 81, 81))))
        );
        InsertTabContainerLayout.setVerticalGroup(
            InsertTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InsertTabContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InsertInstructions, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InsertTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonProviderTbl)
                    .addComponent(lvlStep1))
                .addGap(18, 18, 18)
                .addGroup(InsertTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonPlanTbl)
                    .addComponent(lblStep2))
                .addGap(38, 38, 38)
                .addGroup(InsertTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonPremiumTbl)
                    .addComponent(buttonBenefitsTbl)
                    .addComponent(lblStep3)
                    .addComponent(buttonCostShareTbl))
                .addGap(51, 51, 51)
                .addGroup(InsertTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonBenefitCostTbl)
                    .addComponent(lblStep4)
                    .addComponent(buttonRefReqTbl)
                    .addComponent(buttonPlanlvlProgramsTbl))
                .addGap(55, 55, 55)
                .addGroup(InsertTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOutNetDeductTbl)
                    .addComponent(lblStep5)
                    .addComponent(buttonMOOPTbl)
                    .addComponent(buttonGeoCovTbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                .addGroup(InsertTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOutPocketCostsTbl)
                    .addComponent(buttonInNetDeductTbl)
                    .addComponent(lblStep6))
                .addGap(74, 74, 74))
        );

        MainMenuTab.addTab("Insert Template", InsertTabContainer);

        QueryTabContainer.setBackground(new java.awt.Color(255, 255, 255));

        QueryResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        QueryTableContainer.setViewportView(QueryResultTable);

        lblCustomSQLQueryBtn.setForeground(new java.awt.Color(255, 0, 0));
        lblCustomSQLQueryBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCustomSQLQueryBtn.setText("<html><b>WARNING!</b> Only use \"Custom SQL Query\" option if you are familiar with SQL programming language!</html>");

        lblQueryTabIntro.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblQueryTabIntro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Database/MHBElogo.jpg"))); // NOI18N
        lblQueryTabIntro.setText("<html>This tab allows users to ask specific questions of the database. Please select one of the pre-defined query options to the right and a pop-up will open allowing you to set parameters for your query.</html>");

        QueryDropdownList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Display Query", "Find Min/Max Query", "Comparison Query", "Print Table Query", "Custom SQL Query" }));
        QueryDropdownList.setToolTipText("Select a predefined query and input parameters.");
        QueryDropdownList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QueryDropdownListActionPerformed(evt);
            }
        });

        lblQueryDropdown.setLabelFor(QueryDropdownList);
        lblQueryDropdown.setText("Select a pre-defined Query");

        javax.swing.GroupLayout QueryTabContainerLayout = new javax.swing.GroupLayout(QueryTabContainer);
        QueryTabContainer.setLayout(QueryTabContainerLayout);
        QueryTabContainerLayout.setHorizontalGroup(
            QueryTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QueryTabContainerLayout.createSequentialGroup()
                .addGroup(QueryTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(QueryTabContainerLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(lblCustomSQLQueryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QueryTabContainerLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(QueryTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblQueryDropdown)
                            .addComponent(QueryDropdownList, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(QueryTableContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 837, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(QueryTabContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQueryTabIntro, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        QueryTabContainerLayout.setVerticalGroup(
            QueryTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QueryTabContainerLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(lblQueryTabIntro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(QueryTabContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(QueryTabContainerLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(QueryTableContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(QueryTabContainerLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(lblQueryDropdown)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(QueryDropdownList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(188, 188, 188)
                        .addComponent(lblCustomSQLQueryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MainMenuTab.addTab("Query Database", QueryTabContainer);

        FileMenu.setBackground(new java.awt.Color(255, 255, 255));
        FileMenu.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        FileDropdown.setBackground(new java.awt.Color(255, 255, 255));
        FileDropdown.setText("File");

        Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Database/Actions-application-exit-icon.png"))); // NOI18N
        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        FileDropdown.add(Exit);

        FileMenu.add(FileDropdown);

        HelpDropdown.setText("Help");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Database/help-file-icon.png"))); // NOI18N
        jMenuItem1.setText("Help PDF");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        HelpDropdown.add(jMenuItem1);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Database/Actions-help-about-icon.png"))); // NOI18N
        jMenuItem2.setText("About");
        HelpDropdown.add(jMenuItem2);

        FileMenu.add(HelpDropdown);

        setJMenuBar(FileMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainMenuTab, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(MainMenuTab))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ModifyTableListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyTableListActionPerformed
        
        String[] columnNames=null;
        String sql = null;
        if((ModifyTableList.getSelectedItem().toString()).equalsIgnoreCase("Provider Table")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Provider";            
        }
        if((ModifyTableList.getSelectedItem().toString()).equalsIgnoreCase("Plan Table")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Plan";            
        }
        if((ModifyTableList.getSelectedItem().toString()).equalsIgnoreCase("Plan Level Programs Table")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Plan_lvl_programs";            
        }
        if((ModifyTableList.getSelectedItem().toString()).equalsIgnoreCase("Benefit Table")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Benefits";            
        }
        if((ModifyTableList.getSelectedItem().toString()).equalsIgnoreCase("Cost Sharing Table")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Cost_sharing";            
        }
        if((ModifyTableList.getSelectedItem().toString()).equalsIgnoreCase("Service Cost Table")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Service_cost";            
        }
        if((ModifyTableList.getSelectedItem().toString()).equalsIgnoreCase("Dates Table")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Dates";            
        }
        if((ModifyTableList.getSelectedItem().toString()).equalsIgnoreCase("Exclusions Table")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Exclusions";            
        }
        if((ModifyTableList.getSelectedItem().toString()).equalsIgnoreCase("Geographic Coverage Table")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Geo_covarage";            
        }
        if((ModifyTableList.getSelectedItem().toString()).equalsIgnoreCase("In Network Deductible Table")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM In_network_deductible";            
        }
        if((ModifyTableList.getSelectedItem().toString()).equalsIgnoreCase("Out-of-Network Deductible Table")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Out_network_deductible";            
        }
        if((ModifyTableList.getSelectedItem().toString()).equalsIgnoreCase("Out-of-pocket Table")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Out_of_pocket";            
        }
        if((ModifyTableList.getSelectedItem().toString()).equalsIgnoreCase("Referral Required Table")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Referral_required";            
        }
        if((ModifyTableList.getSelectedItem().toString()).equalsIgnoreCase("Maximum Out-of-pocket Table")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM MOOP";            
        }
        Object[] columns = null;
        javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel();
        
        try {
            //PREPARED STMT
            Statement s = objDBConnection.prepareStatement(sql);
            ResultSet rs = s.executeQuery(sql);
            ResultSetMetaData meta = rs.getMetaData();
            //columns = new Object[rs.getFetchSize()];
            //LOOP THRU GETTING ALL VALUES
            Integer columncount = meta.getColumnCount();
            columnNames = new String[columncount];
            
            for (int i = 1; i <= columncount; i++) {                
                //System.out.println(meta.getColumnName(i));
                columnNames[i-1] = meta.getColumnName(i);
              }
            columns = columnNames;
            model.setColumnIdentifiers(columns);
            
            model.setRowCount(0);
            
            while(rs.next()) {
                String[] obj = new String[columncount];
                for(int j=0; j<columncount; j++){
                    obj[j] = rs.getString(j+1);
                }
                model.addRow(obj);
            }
            }catch (Exception ex) {
                ex.printStackTrace();
            } 
        
        
        
        // set the model to the table
        ModifyResultTable.setModel(model);
    }//GEN-LAST:event_ModifyTableListActionPerformed

    private void deleteTblDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTblDataActionPerformed
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) ModifyResultTable.getModel();

       // get selected row index

       try{
       int SelectedRowIndex = ModifyResultTable.getSelectedRow();
       model.removeRow(SelectedRowIndex);
       }catch(Exception ex)
       {
           JOptionPane.showMessageDialog(this, ex);
           //ex.printStackTrace();
       }
    }//GEN-LAST:event_deleteTblDataActionPerformed

    private void updateTblDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTblDataActionPerformed
        
    }//GEN-LAST:event_updateTblDataActionPerformed

    private void buttonProviderTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonProviderTblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonProviderTblActionPerformed

    private void buttonPlanTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPlanTblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonPlanTblActionPerformed

    private void buttonBenefitsTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBenefitsTblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonBenefitsTblActionPerformed

    private void buttonPlanlvlProgramsTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPlanlvlProgramsTblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonPlanlvlProgramsTblActionPerformed

    private void buttonCostShareTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCostShareTblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonCostShareTblActionPerformed

    private void buttonPremiumTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPremiumTblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonPremiumTblActionPerformed

    private void buttonGeoCovTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGeoCovTblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonGeoCovTblActionPerformed

    private void buttonMOOPTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMOOPTblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonMOOPTblActionPerformed

    private void buttonRefReqTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRefReqTblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonRefReqTblActionPerformed

    private void buttonInNetDeductTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonInNetDeductTblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonInNetDeductTblActionPerformed

    private void buttonOutNetDeductTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOutNetDeductTblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonOutNetDeductTblActionPerformed

    private void buttonBenefitCostTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBenefitCostTblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonBenefitCostTblActionPerformed

    private void buttonOutPocketCostsTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOutPocketCostsTblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonOutPocketCostsTblActionPerformed

    private void QueryDropdownListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QueryDropdownListActionPerformed
    String[] columnNames=null;
        String sql = null;
        if((QueryDropdownList.getSelectedItem().toString()).equalsIgnoreCase("Display Query")) {
            // create a pop-up window to take input 
            new DisplayDialog().setVisible(true);
        }
        if((QueryDropdownList.getSelectedItem().toString()).equalsIgnoreCase("Find Min/Max Query")) {
            // create a pop-up window to take input 
                       
        }
        if((QueryDropdownList.getSelectedItem().toString()).equalsIgnoreCase("Comparison Query")) {
            // create a pop-up window to take input
                        
        }
        if((QueryDropdownList.getSelectedItem().toString()).equalsIgnoreCase("Print Table Query")) {
            // create a pop-up window to take input 
                      
        }
        if((QueryDropdownList.getSelectedItem().toString()).equalsIgnoreCase("Custom SQL Query")) {
            // create a pop-up window to take input 
                        
        }
        
    }//GEN-LAST:event_QueryDropdownListActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
    System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_ExitActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
                // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void DisplayTblSelectionMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayTblSelectionMenuActionPerformed
        String[] columnNames=null;
        String sql = null;
        if((DisplayTblSelectionMenu.getSelectedItem().toString()).equalsIgnoreCase("Provider")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Provider";            
        }
        if((DisplayTblSelectionMenu.getSelectedItem().toString()).equalsIgnoreCase("Plan")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Plan";            
        }
        if((DisplayTblSelectionMenu.getSelectedItem().toString()).equalsIgnoreCase("Plan-Level Programs")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Plan_lvl_programs";            
        }
        if((DisplayTblSelectionMenu.getSelectedItem().toString()).equalsIgnoreCase("Benefits")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Benefits";            
        }
        if((DisplayTblSelectionMenu.getSelectedItem().toString()).equalsIgnoreCase("Cost Sharing")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Cost_sharing";            
        }
        if((DisplayTblSelectionMenu.getSelectedItem().toString()).equalsIgnoreCase("Service Cost")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Service_cost";            
        }
        if((DisplayTblSelectionMenu.getSelectedItem().toString()).equalsIgnoreCase("Dates")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Dates";            
        }
        if((DisplayTblSelectionMenu.getSelectedItem().toString()).equalsIgnoreCase("Exclusions")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Exclusions";            
        }
        if((DisplayTblSelectionMenu.getSelectedItem().toString()).equalsIgnoreCase("Geographic Coverage")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Geo_covarage";            
        }
        if((DisplayTblSelectionMenu.getSelectedItem().toString()).equalsIgnoreCase("In-Network Deductible")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM In_network_deductible";            
        }
        if((DisplayTblSelectionMenu.getSelectedItem().toString()).equalsIgnoreCase("Out-of-Network Deductible")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Out_network_deductible";            
        }
        if((DisplayTblSelectionMenu.getSelectedItem().toString()).equalsIgnoreCase("Out-of-pocket Costs")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Out_of_pocket";            
        }
        if((DisplayTblSelectionMenu.getSelectedItem().toString()).equalsIgnoreCase("Referral Required")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Referral_required";            
        }
        if((DisplayTblSelectionMenu.getSelectedItem().toString()).equalsIgnoreCase("Maximum Out-of-pocket")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM MOOP";            
        }
        if((DisplayTblSelectionMenu.getSelectedItem().toString()).equalsIgnoreCase("Premium")) {
            // create a table model and set a Column Identifiers to this model 
            sql = "SELECT * FROM Premium";            
        }
        Object[] columns = null;
        javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel();
        
        try {
            //PREPARED STMT
            Statement s = objDBConnection.prepareStatement(sql);
            ResultSet rs = s.executeQuery(sql);
            ResultSetMetaData meta = rs.getMetaData();
            //columns = new Object[rs.getFetchSize()];
            //LOOP THRU GETTING ALL VALUES
            Integer columncount = meta.getColumnCount();
            columnNames = new String[columncount];
            
            for (int i = 1; i <= columncount; i++) {                
                //System.out.println(meta.getColumnName(i));
                columnNames[i-1] = meta.getColumnName(i);
              }
            columns = columnNames;
            model.setColumnIdentifiers(columns);
            
            model.setRowCount(0);
            
            while(rs.next()) {
                String[] obj = new String[columncount];
                for(int j=0; j<columncount; j++){
                    obj[j] = rs.getString(j+1);
                }
                model.addRow(obj);
            }
            }catch (Exception ex) {
                ex.printStackTrace();
            } 
        
        
        
        // set the model to the table
        QueryResultTable.setModel(model);
    }//GEN-LAST:event_DisplayTblSelectionMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog DisplayDialog;
    private javax.swing.JComboBox<String> DisplayTblSelectionMenu;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenu FileDropdown;
    private javax.swing.JMenuBar FileMenu;
    private javax.swing.JMenu HelpDropdown;
    private javax.swing.JLabel InsertInstructions;
    private javax.swing.JPanel InsertTabContainer;
    private javax.swing.JLabel InsertTabDescription;
    private javax.swing.JPanel MMOuterContainer;
    private javax.swing.JLabel MMWelcome;
    private javax.swing.JPanel MMinnerContainer;
    private javax.swing.JLabel MMintroText;
    private javax.swing.JTabbedPane MainMenuTab;
    private javax.swing.JPanel ModOuterTblContainer;
    private javax.swing.JPanel ModSidePanel;
    private javax.swing.JScrollPane ModTblScrollPane;
    private javax.swing.JLabel ModifyMHBELogo;
    private javax.swing.JTable ModifyResultTable;
    private javax.swing.JPanel ModifyTabContainer;
    private javax.swing.JLabel ModifyTabDescription;
    private javax.swing.JComboBox<String> ModifyTableList;
    private javax.swing.JComboBox<String> QueryDropdownList;
    private javax.swing.JTable QueryResultTable;
    private javax.swing.JPanel QueryTabContainer;
    private javax.swing.JLabel QueryTabDescription;
    private javax.swing.JScrollPane QueryTableContainer;
    private javax.swing.JButton buttonBenefitCostTbl;
    private javax.swing.JButton buttonBenefitsTbl;
    private javax.swing.JButton buttonCostShareTbl;
    private javax.swing.JButton buttonGeoCovTbl;
    private javax.swing.JButton buttonInNetDeductTbl;
    private javax.swing.JButton buttonMOOPTbl;
    private javax.swing.JButton buttonOutNetDeductTbl;
    private javax.swing.JButton buttonOutPocketCostsTbl;
    private javax.swing.JButton buttonPlanTbl;
    private javax.swing.JButton buttonPlanlvlProgramsTbl;
    private javax.swing.JButton buttonPremiumTbl;
    private javax.swing.JButton buttonProviderTbl;
    private javax.swing.JButton buttonRefReqTbl;
    private javax.swing.JButton deleteTblData;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JLabel lblCustomSQLQueryBtn;
    private javax.swing.JLabel lblModifyTableList;
    private javax.swing.JLabel lblModifyWarning;
    private javax.swing.JLabel lblQueryDropdown;
    private javax.swing.JLabel lblQueryTabIntro;
    private javax.swing.JLabel lblSelectDisplayTable;
    private javax.swing.JLabel lblStep2;
    private javax.swing.JLabel lblStep3;
    private javax.swing.JLabel lblStep4;
    private javax.swing.JLabel lblStep5;
    private javax.swing.JLabel lblStep6;
    private javax.swing.JLabel lvlStep1;
    private javax.swing.JButton updateTblData;
    // End of variables declaration//GEN-END:variables
}
